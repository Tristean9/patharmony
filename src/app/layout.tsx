'use client'
// import type { Metadata } from "next";
import localFont from "next/font/local";
import "./globals.css";
import { handlers } from '@/mocks/handlers';

const geistSans = localFont({
    src: "./fonts/GeistVF.woff",
    variable: "--font-geist-sans",
    weight: "100 900",
});
const geistMono = localFont({
    src: "./fonts/GeistMonoVF.woff",
    variable: "--font-geist-mono",
    weight: "100 900",
});

// export const metadata: Metadata = {
//     title: "Create Next App",
//     description: "Generated by create next app",
// };

// 检查环境变量，决定是否启动 MSW
if (process.env.NEXT_PUBLIC_USE_MOCK_API === 'true' && typeof window !== 'undefined') {
    console.log('mocks start');
    const { setupWorker } = await import('msw/browser');
    const worker = setupWorker(...handlers);
    worker.start();
}

export default function RootLayout({
    children,
}: Readonly<{
    children: React.ReactNode;
}>) {
    return (
        <html lang="en">
            <body
                className={`${geistSans.variable} ${geistMono.variable} antialiased`}
            >
                {children}
            </body>
        </html>
    );
}
